package org.jsmart.zerocode.openapi;

import java.io.File;
import java.io.IOException;
import java.util.Collection;

import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;
import org.junit.Before;

import giis.visualassert.Framework;
import giis.visualassert.SoftVisualAssert;
import giis.visualassert.VisualAssert;

/**
 * Base class for all unit and integration tests.
 * Tests place the generated scenario files at target folder 
 * and compare then against the expected scenario files at test resources folder
 * using the assertScenario included in this class.
 */
public class BaseTest {

	protected String ymlFolder = ""; // OpenApi specification files
	protected String outFolder = ""; // Scenarios generated by the tests
	protected String bmkFolder = ""; // Expected scenarios

	@Before
	public void setUp() { //should be overriden by integration tests
		ymlFolder = "src/test/resources/unit_test_files";
		outFolder = "target/unit_test_generated_files";
		bmkFolder = "src/test/resources/unit_test_generated_files";
	}

	/**
	 * Compare the expected vs the actual contents of a scenario file.
	 * In addition to the ability to compare the differences in failed tests 
	 * from the development environment, an html file that highlights the differences
	 * is created at the target folder for offline checking.
	 */
	protected void assertScenario(String scenarioName) throws IOException {
		VisualAssert va = new VisualAssert()
				.setSoftDifferences(false).setFramework(Framework.JUNIT4);
		String fileName = scenarioName + ".json";
		String expected = FileUtils.readFileToString(new File(FilenameUtils.concat(bmkFolder, fileName)), "UTF-8");
		String actual = FileUtils.readFileToString(new File(FilenameUtils.concat(outFolder, fileName)), "UTF-8");
		va.assertEquals(expected, actual, "Diffs in scenario " + scenarioName);
	}

	/**
	 * Soft Assert to compare the expected vs the actual contents of all scenario files generated
	 * from an OpenAPI specification.
	 * Each test failure stores the diff file in target as well as an aggregate file with all differences. 
	 */
	protected void assertAllScenarios(String folderName) throws IOException {
		SoftVisualAssert va = new SoftVisualAssert()
				.setSoftDifferences(false).setCallStackLength(2).setFramework(Framework.JUNIT4);
		Collection<File> files = FileUtils.listFiles(new File(outFolder), new String[] { "json" }, false);
		for (File file : files) {
			String fileName = file.getName();
			String expected = FileUtils.readFileToString(new File(FilenameUtils.concat(bmkFolder, fileName)), "UTF-8");
			String actual = FileUtils.readFileToString(new File(FilenameUtils.concat(outFolder, fileName)), "UTF-8");
			va.assertEquals(expected, actual, "Diffs in file " + fileName, "DIFF" + fileName + ".html");
		}
		va.assertAll("ALL_DIFFS.html");
	}
}
